{
  "openapi": "3.0.0",
  "info": {
    "title": "Bosa Kitchen Admin API",
    "description": "API documentation for Bosa Kitchen Admin Panel",
    "version": "1.0.0",
    "contact": {
      "name": "Bosa Kitchen Support"
    }
  },
  "servers": [
    {
      "url": "http://localhost:8081/api",
      "description": "Development server"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "Order": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "ORD123"
          },
          "customer_name": {
            "type": "string",
            "example": "John Doe"
          },
          "phone": {
            "type": "string",
            "example": "+1234567890"
          },
          "email": {
            "type": "string",
            "example": "john@example.com"
          },
          "address": {
            "type": "string",
            "example": "123 Main St"
          },
          "items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Burger"
                },
                "quantity": {
                  "type": "integer",
                  "example": 2
                },
                "price": {
                  "type": "number",
                  "format": "float",
                  "example": 9.99
                }
              }
            }
          },
          "subtotal": {
            "type": "number",
            "format": "float",
            "example": 19.98
          },
          "tax": {
            "type": "number",
            "format": "float",
            "example": 1.99
          },
          "total": {
            "type": "number",
            "format": "float",
            "example": 21.97
          },
          "status": {
            "type": "string",
            "enum": ["pending", "processing", "completed", "cancelled"],
            "example": "pending"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "MenuItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "ITEM123"
          },
          "name": {
            "type": "string",
            "example": "Cheeseburger"
          },
          "description": {
            "type": "string",
            "example": "Juicy beef patty with cheese"
          },
          "price": {
            "type": "number",
            "format": "float",
            "example": 9.99
          },
          "category": {
            "type": "string",
            "example": "Burgers"
          },
          "imageUrl": {
            "type": "string",
            "example": "http://example.com/images/burger.jpg"
          },
          "isAvailable": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "Category": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "CAT123"
          },
          "name": {
            "type": "string",
            "example": "Burgers"
          },
          "description": {
            "type": "string",
            "example": "Delicious burger options"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/auth/admin/login": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Admin Login",
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email", "password"],
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "admin@bosa.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "admin123",
                    "format": "password"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                    },
                    "message": {
                      "type": "string",
                      "example": "Login successful"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Invalid email or password"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/orders": {
      "get": {
        "tags": ["Orders"],
        "summary": "Get all orders",
        "parameters": [
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            },
            "description": "Search term for orders"
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string",
              "enum": ["pending", "processing", "completed", "cancelled"]
            },
            "description": "Filter orders by status"
          }
        ],
        "responses": {
          "200": {
            "description": "List of orders",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "orders": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Order"
                      }
                    },
                    "pendingCount": {
                      "type": "integer",
                      "example": 5
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/orders/{orderId}": {
      "get": {
        "tags": ["Orders"],
        "summary": "Get order details",
        "parameters": [
          {
            "in": "path",
            "name": "orderId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Order ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Order details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          }
        }
      }
    },
    "/admin/orders/update/{orderId}": {
      "put": {
        "tags": ["Orders"],
        "summary": "Update order status",
        "parameters": [
          {
            "in": "path",
            "name": "orderId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Order ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": ["pending", "processing", "completed", "cancelled"]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Order updated successfully"
          }
        }
      }
    },
    "/admin/menu": {
      "get": {
        "tags": ["Menu"],
        "summary": "Get all menu items",
        "parameters": [
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            },
            "description": "Search term for menu items"
          },
          {
            "in": "query",
            "name": "category",
            "schema": {
              "type": "string"
            },
            "description": "Filter by category"
          }
        ],
        "responses": {
          "200": {
            "description": "List of menu items",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MenuItem"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Menu"],
        "summary": "Add new menu item",
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": ["name", "price", "categoryId"],
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Classic Burger"
                  },
                  "description": {
                    "type": "string",
                    "example": "Juicy beef patty with fresh vegetables"
                  },
                  "price": {
                    "type": "number",
                    "format": "float",
                    "example": 9.99
                  },
                  "categoryId": {
                    "type": "string",
                    "example": "CAT123",
                    "description": "ID of the category this item belongs to"
                  },
                  "image": {
                    "type": "string",
                    "format": "binary",
                    "description": "Image file for the menu item"
                  },
                  "isAvailable": {
                    "type": "boolean",
                    "default": true,
                    "example": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Menu item created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MenuItem"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input or missing required fields"
          },
          "404": {
            "description": "Category not found"
          }
        }
      }
    },
    "/admin/categories": {
      "get": {
        "tags": ["Categories"],
        "summary": "Get all categories",
        "responses": {
          "200": {
            "description": "List of categories",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Category"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Categories"],
        "summary": "Add new category",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["name"],
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Burgers"
                  },
                  "description": {
                    "type": "string",
                    "example": "Delicious burger options"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Category created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/admin/categories/{categoryId}": {
      "put": {
        "tags": ["Categories"],
        "summary": "Update category",
        "parameters": [
          {
            "in": "path",
            "name": "categoryId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Category ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Updated Burgers"
                  },
                  "description": {
                    "type": "string",
                    "example": "Updated description"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Category updated successfully"
          },
          "404": {
            "description": "Category not found"
          }
        }
      },
      "delete": {
        "tags": ["Categories"],
        "summary": "Delete category",
        "parameters": [
          {
            "in": "path",
            "name": "categoryId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Category ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Category deleted successfully"
          },
          "404": {
            "description": "Category not found"
          }
        }
      }
    }
  }
} 